# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Testing Dev

on:
  push:
    branches:
      - '*'
      - '!master'
jobs:
  build:
    runs-on: ubuntu-latest
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      redis:        
        image: redis        
        ports:          
          - 6379:6379
      db:        
        image: mariadb        
        ports:          
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: .TeSLa-C3-password          
          MYSQL_DATABASE: tesla
          MYSQL_USER: tesla
          MYSQL_PASSWORD: tesla-password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 3
          --name db
      vault:
        image: vault
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: sRRkAJtED7TmrbSf3zheD3LM  
          VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
        options: >-
          --cap-add=IPC_LOCK 
          --name=vault          
      minio:
        image: bitnami/minio:latest
        ports:
          - 9000:9000
        env: 
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: rabbitmq
          RABBITMQ_DEFAULT_PASS: rabbitmq
        options: >-
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5        
    steps:    
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install flake8 pytest pip-tools pytest-mock mock
          if [ -f requirements.in ]; then pip-compile; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Install TeSLA CE Package
        run: |      
          python setup.py install
      - name: Test with pytest
        run: |        
          pytest --cov-report term --cov=tesla_ce
        env:        
          # DJango Configuration
          DJANGO_SETTINGS_MODULE: tesla_ce.settings
          DJANGO_CONFIGURATION: Test
          # MySQL        
          DB_ROOT_PASSWORD: .TeSLa-C3-password
          DB_HOST: 127.0.0.1
          DB_NAME: tesla
          DB_USER: tesla
          DB_PORT: 3306
          DB_PASSWORD: tesla-password
          # Minio
          TIMEZONE: Europe/Paris
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
          MINIO_BROWSER: on
          STORAGE_ACCESS_KEY: minioadmin
          STORAGE_SECRET_KEY: minioadmin
          STORAGE_BUCKET_NAME: tesla
          STORAGE_REGION: eu-west-1
          STORAGE_URL: http://localhost:9000
          # RabbitMQ
          RABBITMQ_ADMIN_USER: rabbitmq
          RABBITMQ_ADMIN_PASSWORD: rabbitmq
          # TEST ENVIRONMENT #        
          TESLA_DOMAIN: tesla-ce
          TESLA_ADMIN_MAIL: test@tesla-ce.org
          VAULT_MANAGEMENT: 1
          VAULT_URL: http://localhost:8200                 
          VAULT_TOKEN: sRRkAJtED7TmrbSf3zheD3LM           
